{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHIKANT KUMAR\\\\Desktop\\\\blogs-context-starter\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { baseUrl } from \"../baseUrl\";\n\n//step1\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport default function AppContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  //data filling pending\n\n  async function fetchBlogPosts() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setLoading(true);\n    let url = `${baseUrl}?page=${page}`;\n    console.log(\"printing the final URL\");\n    console.log(url);\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      console.log(data);\n      setPage(data.page);\n      setPosts(data.posts);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      console.log(\"Error in fetching data\");\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    }\n    setLoading(false);\n  }\n  function handlePageChange(page) {\n    setPage(page);\n    fetchBlogPosts(page);\n  }\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setLoading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    fetchBlogPosts,\n    handlePageChange\n  };\n\n  //step2\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n}\n_s(AppContextProvider, \"9vCi9/wc4+HZ542Rv+g7w2zLxMk=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","baseUrl","jsxDEV","_jsxDEV","AppContext","AppContextProvider","_ref","_s","children","loading","setLoading","posts","setPosts","page","setPage","totalPages","setTotalPages","fetchBlogPosts","arguments","length","undefined","url","console","log","result","fetch","data","json","error","handlePageChange","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ABHIKANT KUMAR/Desktop/blogs-context-starter/src/context/AppContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport { baseUrl } from \"../baseUrl\";\n\n//step1\nexport const AppContext = createContext();\n\nexport default function AppContextProvider({children}) {\n    const [loading, setLoading] = useState(false);\n    const [posts, setPosts] = useState([]);\n    const [page, setPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(null);\n\n    //data filling pending\n\n    async function fetchBlogPosts(page = 1) {\n        setLoading(true);\n        let url = `${baseUrl}?page=${page}`;\n        console.log(\"printing the final URL\");\n        console.log(url);\n        try{\n            const result = await fetch(url);\n            const data = await result.json();\n            console.log(data);\n            setPage(data.page);\n            setPosts(data.posts);\n            setTotalPages(data.totalPages)\n        }\n        catch(error) {\n            console.log(\"Error in fetching data\");\n            setPage(1);\n            setPosts([]);\n            setTotalPages(null);\n        }\n        setLoading(false);\n    }\n\n    function handlePageChange(page) {\n        setPage(page);\n        fetchBlogPosts(page);\n    }\n\n\n\n    const value = {\n        posts,\n        setPosts,\n        loading,\n        setLoading,\n        page,\n        setPage,\n        totalPages,\n        setTotalPages,\n        fetchBlogPosts,\n        handlePageChange\n    };\n\n    //step2\n    return <AppContext.Provider value={value}>\n        {children}\n    </AppContext.Provider>;\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,gBAAGL,aAAa,CAAC,CAAC;AAEzC,eAAe,SAASM,kBAAkBA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAF,IAAA;EACjD,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAElD;;EAEA,eAAeiB,cAAcA,CAAA,EAAW;IAAA,IAAVJ,IAAI,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAClCR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIW,GAAG,GAAI,GAAEpB,OAAQ,SAAQY,IAAK,EAAC;IACnCS,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,IAAG;MACC,MAAMG,MAAM,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MAC/B,MAAMK,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;MAChCL,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;MACjBZ,OAAO,CAACY,IAAI,CAACb,IAAI,CAAC;MAClBD,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;MACpBK,aAAa,CAACU,IAAI,CAACX,UAAU,CAAC;IAClC,CAAC,CACD,OAAMa,KAAK,EAAE;MACTN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCT,OAAO,CAAC,CAAC,CAAC;MACVF,QAAQ,CAAC,EAAE,CAAC;MACZI,aAAa,CAAC,IAAI,CAAC;IACvB;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB;EAEA,SAASmB,gBAAgBA,CAAChB,IAAI,EAAE;IAC5BC,OAAO,CAACD,IAAI,CAAC;IACbI,cAAc,CAACJ,IAAI,CAAC;EACxB;EAIA,MAAMiB,KAAK,GAAG;IACVnB,KAAK;IACLC,QAAQ;IACRH,OAAO;IACPC,UAAU;IACVG,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC,cAAc;IACdY;EACJ,CAAC;;EAED;EACA,oBAAO1B,OAAA,CAACC,UAAU,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EACpCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAC1B;AAAC5B,EAAA,CAtDuBF,kBAAkB;AAAA+B,EAAA,GAAlB/B,kBAAkB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}