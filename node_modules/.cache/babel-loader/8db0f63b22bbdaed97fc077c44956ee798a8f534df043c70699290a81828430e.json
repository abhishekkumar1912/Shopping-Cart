{"ast":null,"code":"import{Routes}from\"react-router-dom\";import Navbar from\"./components/Navbar\";import{Route}from\"react-router-dom\";import Home from\"./pages/Home\";import Cart from\"./pages/Cart\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-slate-900\",children:/*#__PURE__*/_jsx(Navbar,{})}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/cart\",element:/*#__PURE__*/_jsx(Cart,{})})]})]});};export default App;/*\r\nTo install the reduxjs Toolkit run following command :- npm install @reduxjs/toolkit react-redux\r\n\r\n\r\nWhat is Redux Toolkit  :-  Redux Toolkit is our official, opinionated, batteries-included toolset for efficient Redux development. It is intended to be the \r\nstandard way to write Redux logic, and  Redux Toolkit makes it easier to write good Redux applications and speeds up development\r\n\r\nIt includes several utility functions that simplify the most common Redux use cases, including store setup, defining reducers, immutable update logic, and even \r\ncreating entire \"slices\" of state at once without writing any action creators or action types by hand. It also includes the most widely used Redux addons, like Redux\r\nThunk for async logic and Reselect for writing selector functions, so that you can use them right away. It lets you decide how you want to handle everything,\r\nlike store setup, what your state contains, and how you want to build your reducers.\r\n\r\n\r\n install :- npm install @reduxjs/toolkit\r\n\r\n\r\n Redux Toolkit includes these APIs:\r\n\r\nconfigureStore(): configureStore sets up a well-configured Redux store with a single function call, including combining reducers, adding the \r\nthunk middleware, and setting up the Redux DevTools integration. It also is easier to configure than createStore , because it takes named options parameters.\r\n\r\nWhat Is Redux Middleware :-  Redux Middleware allows you to intercept every action sent to the reducer so you can make changes to the action or cancel the action.\r\nMiddleware helps you with logging, error reporting, making asynchronous requests, and a whole lot more   (intercept means rokna)\r\n\r\n\r\ncreateReducer(): that lets you supply a lookup table of action types to case reducer functions, rather than writing switch statements. In addition, it \r\nautomatically uses the immer library to let you write simpler immutable updates with normal mutative code, like state.todos[3].completed = true.\r\n\r\ncreateAction(): generates an action creator function for the given action type string. The function itself has toString() defined, so that it can be used\r\n in place of the type constant.\r\n\r\ncreateSlice(): accepts an object of reducer functions, a slice name, and an initial state value, and automatically generates a slice reducer with \r\ncorresponding action creators and action types.\r\n\r\ncreateAsyncThunk: accepts an action type string and a function that returns a promise, and generates a thunk that dispatches pending/fulfilled/rejected\r\n action types based on that promise\r\n\r\ncreateEntityAdapter: generates a set of reusable reducers and selectors to manage normalized data in the store\r\n\r\n**** we use useselector to fetch the data from slice like :- const count = useSelector((state) => state.counter.value):\r\n     we use here counter because we have created createSlice() named \"counterSlice\";\r\n\r\n**** we use useDispatch() to call function like :-  const dispatch = useDispatch(); then call function like dispatch(remove(item));\r\n\r\n    \r\n\r\n*/","map":{"version":3,"names":["Routes","Navbar","Route","Home","Cart","jsx","_jsx","jsxs","_jsxs","App","children","className","path","element"],"sources":["C:/Users/Hp/Desktop/Shopping cart app/src/App.jsx"],"sourcesContent":["import { Routes } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\"\r\nimport { Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\"\r\nimport Cart from \"./pages/Cart\"\r\n\r\nconst App = () => {\r\n  return (\r\n  \r\n    <div>\r\n        <div className=\"bg-slate-900\">\r\n           <Navbar/>\r\n         </div>\r\n\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home/>} />\r\n          <Route path=\"/cart\" element={<Cart/>} />\r\n        </Routes>\r\n  </div>\r\n  \r\n)}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nTo install the reduxjs Toolkit run following command :- npm install @reduxjs/toolkit react-redux\r\n\r\n\r\nWhat is Redux Toolkit  :-  Redux Toolkit is our official, opinionated, batteries-included toolset for efficient Redux development. It is intended to be the \r\nstandard way to write Redux logic, and  Redux Toolkit makes it easier to write good Redux applications and speeds up development\r\n\r\nIt includes several utility functions that simplify the most common Redux use cases, including store setup, defining reducers, immutable update logic, and even \r\ncreating entire \"slices\" of state at once without writing any action creators or action types by hand. It also includes the most widely used Redux addons, like Redux\r\nThunk for async logic and Reselect for writing selector functions, so that you can use them right away. It lets you decide how you want to handle everything,\r\nlike store setup, what your state contains, and how you want to build your reducers.\r\n\r\n\r\n install :- npm install @reduxjs/toolkit\r\n\r\n\r\n Redux Toolkit includes these APIs:\r\n\r\nconfigureStore(): configureStore sets up a well-configured Redux store with a single function call, including combining reducers, adding the \r\nthunk middleware, and setting up the Redux DevTools integration. It also is easier to configure than createStore , because it takes named options parameters.\r\n\r\nWhat Is Redux Middleware :-  Redux Middleware allows you to intercept every action sent to the reducer so you can make changes to the action or cancel the action.\r\nMiddleware helps you with logging, error reporting, making asynchronous requests, and a whole lot more   (intercept means rokna)\r\n\r\n\r\ncreateReducer(): that lets you supply a lookup table of action types to case reducer functions, rather than writing switch statements. In addition, it \r\nautomatically uses the immer library to let you write simpler immutable updates with normal mutative code, like state.todos[3].completed = true.\r\n\r\ncreateAction(): generates an action creator function for the given action type string. The function itself has toString() defined, so that it can be used\r\n in place of the type constant.\r\n\r\ncreateSlice(): accepts an object of reducer functions, a slice name, and an initial state value, and automatically generates a slice reducer with \r\ncorresponding action creators and action types.\r\n\r\ncreateAsyncThunk: accepts an action type string and a function that returns a promise, and generates a thunk that dispatches pending/fulfilled/rejected\r\n action types based on that promise\r\n\r\ncreateEntityAdapter: generates a set of reusable reducers and selectors to manage normalized data in the store\r\n\r\n**** we use useselector to fetch the data from slice like :- const count = useSelector((state) => state.counter.value):\r\n     we use here counter because we have created createSlice() named \"counterSlice\";\r\n\r\n**** we use useDispatch() to call function like :-  const dispatch = useDispatch(); then call function like dispatch(remove(item));\r\n\r\n    \r\n\r\n*/"],"mappings":"AAAA,OAASA,MAAM,KAAQ,kBAAkB,CACzC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,KAAK,KAAQ,kBAAkB,CACxC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,IAAI,KAAM,cAAc,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/B,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CAChB,mBAEED,KAAA,QAAAE,QAAA,eACIJ,IAAA,QAAKK,SAAS,CAAC,cAAc,CAAAD,QAAA,cAC1BJ,IAAA,CAACL,MAAM,IAAE,EACL,cAEPO,KAAA,CAACR,MAAM,EAAAU,QAAA,eACLJ,IAAA,CAACJ,KAAK,EAACU,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEP,IAAA,CAACH,IAAI,IAAG,EAAG,cACpCG,IAAA,CAACJ,KAAK,EAACU,IAAI,CAAC,OAAO,CAACC,OAAO,cAAEP,IAAA,CAACF,IAAI,IAAG,EAAG,GACjC,GACT,CAEP,CAAC,CAEF,cAAe,CAAAK,GAAG,CAWlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}